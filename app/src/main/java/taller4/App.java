/*
* This source file was generated by the Gradle 'init' task
*/
package taller4;
 
public class App {
    public static void main(String[] args) {
        //Coloque los llamados a cada función de acuerdo con cada enunciado
        //codifique el control de errores para el main
 
        try {
            System.out.println(Imprimir_impares(150));

            System.out.println(Calcular_fibo(7));

            final int lim_inf = 20, lim_sup = 30;
    
            String contador = "";
            
            int random = ((int)(Math.random() * (lim_sup - lim_inf) + lim_inf));
            
            System.out.println("La función será llamada " + random + " veces:");

                for (int inicio = 1; inicio <= random; inicio ++){
                    
                    contador = String.valueOf(inicio) + ". ";
                    
                    System.out.println(contador + Calcular_raiz_random());
                }

            System.out.println(); 

            System.out.println(Generar_aleatorios(-40, 100) + "\n");

            System.out.println(Sumar_aleatorios(100) + "\n");

            System.out.println(Realizar_sorteo());

        }
        

        catch (Exception e) {
            // TODO: handle exception
            System.out.println("Ha ocurrido un error inesperado" + e);
            return;
        }
    }
 
    //  ZONA DE FUNCIONES
 
    /* TODAS LAS FUNCIONES DEBEN LLEVAR CONTROL DE ERRORES, SI EL ENUNCIADO NO LO ESPECIFICA, LO DEBES PONER
     * DE ACUERDO CON TU CRITERIO
     */
 
    /* 
     * 1.	Escriba una función que reciba un entero positivo entre 100 y 500 y retorne en un texto todos los números impares desde 1 
     * hasta ese número separados por comas en grupos de hasta 8 números.
     * 
    */
 
    public static String Imprimir_impares(int numero_ing){
 
        try {
 
            int salto = 0;
            
            final int
             
            lim_inf = 100, lim_sup = 500, caracteres_max = 16, modulo = 2, residuo = 1, constante = 0;

            String 

            impresion = "",
            fin_ejec = "Fin \n",
            error_rango = "El número ingresado debe estar entre 100 y 500";

            if(numero_ing >= lim_inf && numero_ing <= lim_sup){
                
                for(short numeros = 1; numeros <= numero_ing; numeros ++){

                    impresion = String.valueOf(numeros);
                    salto = numeros % caracteres_max;

                    if(numeros % modulo == residuo)
                        System.out.print(impresion + " ");
                    
                    if (salto == constante)
                        System.out.println();
                }

                return fin_ejec;
            }

            else
                return error_rango;

        }

        catch (Exception e) {
            // TODO: handle exception
            String error = "Ha ocurrido un error inesperado";
            return error;
            }
    }
        
    /* 2. 	Escriba una función que reciba un entero N mayor de 2  y retorne un string cono esos N términos de la 
    serie de Fibonacci (La sucesión de Fibonacci se trata de una serie infinita de números naturales que empieza con un 0 y un 1 
    y continúa añadiendo números que son la suma de los dos anteriores: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 
    987, 1597…)
     * 
     * 
    */

    public static String Calcular_fibo(int fibo){

        try {

            String rango = "El numero ingresado debe ser mayor o igual a 0";
            String fin = "FIN  \n";
            
            int n1 = 0, n2 = 1, n3 = 0;
            
            if (fibo >= 0){
                
                System.out.println("0");
                System.out.println("1");
                
                for(int numero = 2; numero <= fibo; numero ++){
                    
                    n3 = n1+ n2;
                    
                    String resultado = String.valueOf(n3);
    
                    System.out.println(resultado);
                    
                    n1 = n2;
                    n2 = n3;
                }

                return fin;
            }

            else
                return rango;
        } 
        
        catch (Exception e) {
            // TODO: handle exception 
            String error = "Ha ocurrido un error inesperado";
            return error;
        }             
    }

    /* 
     * 3.	Diseñar y desarrollar una función que NO reciba datos de entrada, genere aleatoriamente un número entre 2 y 355, 
       le calcule su raíz cuadrada y retorne este valor. Para calcular las raíces usar la función Sqrt de la biblioteca Math.
 
       En el main, antes de invocar la función, se debe calcular un aleatorio entre 20 y 30 el cual establecerá la cantidad 
       de veces que va a llamar a la función y en un ciclo, mostrar los resultados.
 
    */

    public static float Calcular_raiz_random(){

        try {
            
            final int lim_inf_sqrt = 2, lim_sup_sqrt = 365;
            
            float random = ((float)(Math.random() * (lim_sup_sqrt - lim_inf_sqrt) + lim_inf_sqrt));
            
            float raiz = (float)Math.sqrt(random);
            
            return raiz;
        } 
        
        catch (Exception e) {
            // TODO: handle exception
            System.out.println(e);
            return -1;
        }
    }
 
    /*4.	Diseñar y desarrollar una función que reciba un valor inicial y un valor final, para generar 900 números aleatorios 
        en este rango y retorne un texto que diga cuántos números pares fueron generados. Controle que el nro inicial sea menor que 
        nro final para establecer el rango.
 
        Llame la función desde el main e imprimir el resultado arrojado.
    */
 
    public static int Generar_aleatorios(int lim_inf, int lim_sup){
        
        try {
            
            final int limite_numeros = 900;
            final int divisor = 2;
            final int constante = 0;
        
            int num_generado = 0;
            int pares = 0;
            int modulo = 0;
            
            if(lim_sup > lim_inf){
                
                for (int inicio = 1; inicio <= limite_numeros; inicio ++){
                    
                    num_generado = (int)(Math.random()*(lim_sup - lim_inf) + lim_inf);
                    modulo = num_generado % divisor;
                    
                    System.out.print(num_generado + " ");
                    
                    if(modulo == constante)
                        pares ++;
                }
                
                System.out.println("\nEn total se generaron " + pares + " números pares");
            }
            
            else{
                System.out.println("Error en los rangos, compruebe que el primer número sea menor al segundo ");
                return 0;
            }
            
            return 0;
        } 
        
        catch(Exception e) {
            System.out.println("Ha ocurrido un error inesperado");
            return 0;
        }
    }
 
    /* 5.	Diseñar y desarrollar una función que calcule una cantidad de números aleatorios que viene como parámetro de entrada 
        y los sume.  La función deberá retornar el total de la suma. Usted defina los rangos que va a usar en el cálculo.
 
        Llame la función desde el main e imprimir el resultado arrojado.
 
    */
 

    public static int Sumar_aleatorios(int cantidad){
        
        try {
            
            final int lim_inf = 0, lim_sup= 10;
        
            int num_generado = 0;
            int sumatoria = 0;
            
            if(cantidad >= 0){
                
                for (int inicio = 1; inicio <= cantidad; inicio ++){
                    
                    num_generado = (int)(Math.random()*(lim_sup - lim_inf) + lim_inf);
                    
                    System.out.print(num_generado + " ");
                    
                    sumatoria += num_generado;
                }
                
                System.out.println("\nLa suma de los números generados es: " + sumatoria);
            }
            
            else{
                System.out.println("Error en la cantidad. Asegúrese de que sea un entero >= 0 ");
                return 0;
            }
            
            return 0;
        } 
        
        catch(Exception e) {
            System.out.println("Ha ocurrido un error inesperado");
            return 0;
        }
    }
 
    /* 6.	Se requiere una función para simular el sorteo de una lotería, de acuerdo con las siguientes condiciones:
 
            La lotería tiene 20 premios.
 
            Cada premio que calcula el programa debe tener el número de 4 cifras entre 0000 y 9999 acompañado de la serie 
            que es un número entre 100 y 150.
 
            Ejemplo: 5698-101
 
            Cada premio lo debe imprimir el programa de la siguiente forma (n representa un número cualquiera):
 
            Sorteo # nn - Número Premiado nnnn - Serie nnn
 
            Ejm: Sorteo # 19  - Número Premiado 5698 - Serie 101
 
            Para tener en cuenta la forma en la cual se informan los 20 resultados:
 
            Del premio 20 al 6 el programa imprime:
 
            ======PREMIOS MENORES=======
            y la lista de los 15 premios
 
            Del premio 5 al 2 el programa imprime:
            ======PREMIOS SECOS=========
            y la lista de los 4 premios secos
 
            AL llegar al premio 1, el programa imprime:
            ======Premio mayor==========
            Y el premio mayor
 
            Nota: para sacar el premio mayor calcule el random por cada número, como lo hacen en la realidad los sorteos.
 
            La función no recibe parámetros y devuelve un string con toda la lista de premios. El main, invoca la función 
            e imprime el resultado que esta arroje.
 
     * 
     * 
    */

    public static String Realizar_sorteo(){

       try {
        
        final int rango_numeros = 9, rango_serie = 5;

        final int lim_menores = 6, lim_secos = 2;

        int menores = 0, secos = 0;

        int a1 = 0, a2 = 0, a3 = 0, a4 = 0;
        int s1 = 0, s2 = 0, s3 = 0;

        String a_s_1 = "", a_s_2 = "", a_s_3 = "", a_s_4 = "";
        String s_s_1 = "", s_s_2 = "", s_s_3 = "", vacio = "";

            System.out.println("======PREMIOS MENORES=======");

            for(menores = 20; menores >= lim_menores; menores--){

                a1 = (int)(Math.random()*rango_numeros); a2 = (int)(Math.random()*rango_numeros);
                a3 = (int)(Math.random()*rango_numeros); a4 = (int)(Math.random()*rango_numeros);

                s1 = 1; s2 = (int)(Math.random()*rango_serie); s3 = (int)(Math.random()*rango_numeros);

                if(s2 == 5 && s3 >= 0){
                    s3 = 0;
                }

                a_s_1 = String.valueOf(a1); a_s_2 = String.valueOf(a2);
                a_s_3 = String.valueOf(a3); a_s_4 = String.valueOf(a4);

                s_s_1 = String.valueOf(s1); s_s_2 = String.valueOf(s2); s_s_3 = String.valueOf(s3);

                System.out.println("Sorteo #" + menores + ": " + a_s_1 + a_s_2 + a_s_3 + a_s_4 + " - " + s_s_1 + s_s_2 + s_s_3);
            }

            System.out.println("======PREMIOS SECOS=========");
            
            for (secos = 5; secos >= lim_secos; secos--){

                a1 = (int)(Math.random()*rango_numeros); a2 = (int)(Math.random()*rango_numeros);
                a3 = (int)(Math.random()*rango_numeros); a4 = (int)(Math.random()*rango_numeros);

                s1 = 1; s2 = (int)(Math.random()*rango_serie); s3 = (int)(Math.random()*rango_numeros);

                if(s2 == 5 && s3 >= 0)
                    s3 = 0;
            
                a_s_1 = String.valueOf(a1); a_s_2 = String.valueOf(a2);
                a_s_3 = String.valueOf(a3); a_s_4 = String.valueOf(a4);

                s_s_1 = String.valueOf(s1); s_s_2 = String.valueOf(s2); s_s_3 = String.valueOf(s3);

                System.out.println("Sorteo #" + secos + ": " + a_s_1 + a_s_2 + a_s_3 + a_s_4 + " - " + s_s_1 + s_s_2 + s_s_3);
            }

            System.out.println("========PREMIO MAYOR=========");

            a1 = (int)(Math.random()*rango_numeros); a2 = (int)(Math.random()*rango_numeros);
            a3 = (int)(Math.random()*rango_numeros); a4 = (int)(Math.random()*rango_numeros);

            s1 = 1; s2 = (int)(Math.random()*rango_serie); s3 = (int)(Math.random()*rango_numeros);

            if(s2 == 5 && s3 >= 0)
                s3 = 0;
        
            a_s_1 = String.valueOf(a1); a_s_2 = String.valueOf(a2);
            a_s_3 = String.valueOf(a3); a_s_4 = String.valueOf(a4);

            s_s_1 = String.valueOf(s1); s_s_2 = String.valueOf(s2); s_s_3 = String.valueOf(s3);

            System.out.println("Sorteo #1: " + a_s_1 + a_s_2 + a_s_3 + a_s_4 + " - " + s_s_1 + s_s_2 + s_s_3);

        return vacio;

       } 
       
       catch (Exception e) {
            String error = "Ha ocurrido un error inesperado";
            return error;
       }
    }

}
